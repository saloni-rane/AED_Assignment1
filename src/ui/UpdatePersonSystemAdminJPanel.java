/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import Model.CreatePerson;
import Model.CreatePersonHistory;
import Model.Housing;
import Model.UserDirectory;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LENOVO
 */
public class UpdatePersonSystemAdminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UpdatePersonSystemAdminJPanel
     *
     */

    CreatePersonHistory createPersonHistory;
    

    public UpdatePersonSystemAdminJPanel(CreatePersonHistory createPersonHistory) {
        initComponents();
        this.createPersonHistory = createPersonHistory;
        
        displayPersonTableInformation();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        PersonTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtBP = new javax.swing.JTextField();
        btnCheck = new javax.swing.JButton();
        lblCity = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        lblHouseNo = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        FieldFName = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        FieldLName = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        FieldEmail = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        FieldAge = new javax.swing.JTextField();
        lblZipCode = new javax.swing.JLabel();
        FieldZipCode = new javax.swing.JTextField();
        lblPersonId = new javax.swing.JLabel();
        FieldUniqueID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        FieldGender = new javax.swing.JTextField();
        lblCity1 = new javax.swing.JLabel();
        FieldRole = new javax.swing.JTextField();
        lblFirstName1 = new javax.swing.JLabel();
        FieldPassword = new javax.swing.JTextField();
        jCityCombo = new javax.swing.JComboBox<>();
        jCommunityCombo = new javax.swing.JComboBox<>();
        jHousingCombo = new javax.swing.JComboBox<>();

        PersonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Role", "First Name", "Last Name", "Age", "Email", "UserName", "Password", "Gender", "City", "Community", "Hosing No.", "Zip Code"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, false, true, false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(PersonTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 154));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View/ Update Person");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCheck.setText("Check");
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        lblCity.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblCity.setText("City:");

        lblCommunity.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblCommunity.setText("Community:");

        lblHouseNo.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblHouseNo.setText("HouseNo:");

        lblFirstName.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblFirstName.setText("First Name:");

        FieldFName.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N

        lblLastName.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblLastName.setText("Last Name:");

        FieldLName.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N

        lblEmail.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblEmail.setText("Email:");

        FieldEmail.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        FieldEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                FieldEmailKeyReleased(evt);
            }
        });

        lblAge.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblAge.setText("Age:");

        FieldAge.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N

        lblZipCode.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblZipCode.setText("Zipcode:");

        FieldZipCode.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N

        lblPersonId.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblPersonId.setText("Unique Id:");

        FieldUniqueID.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel2.setText("Gender:");

        lblCity1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblCity1.setText("Role:");

        FieldRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldRoleActionPerformed(evt);
            }
        });

        lblFirstName1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblFirstName1.setText("Password:");

        FieldPassword.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N

        jCityCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select City --", "Boston" }));
        jCityCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCityComboActionPerformed(evt);
            }
        });

        jCommunityCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCommunityComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnView)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblHouseNo, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jHousingCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCommunityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FieldZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FieldGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(112, 112, 112)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(FieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(lblPersonId, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(FieldUniqueID, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(FieldLName, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(FieldFName, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblFirstName1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(FieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(FieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(305, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(FieldRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDelete)
                                .addGap(231, 231, 231)
                                .addComponent(txtBP, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {FieldAge, FieldEmail, FieldFName, FieldLName, FieldPassword, FieldUniqueID});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {FieldGender, FieldRole, FieldZipCode, jCityCombo, jCommunityCombo, jHousingCombo, jLabel2, lblCity, lblCommunity, lblHouseNo, lblZipCode});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnView)
                    .addComponent(btnDelete)
                    .addComponent(txtBP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCheck))
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FieldRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblFirstName1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FieldFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FieldLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(FieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPersonId, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FieldUniqueID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCommunityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblHouseNo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jHousingCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(46, 46, 46))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FieldZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(FieldGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(269, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {FieldGender, FieldRole, FieldZipCode, jCityCombo, jCommunityCombo, jHousingCombo, jLabel2, lblCity, lblCommunity, lblHouseNo, lblZipCode});

    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
            // TODO add your handling code here:
       int selectedRowIndex = PersonTable.getSelectedRow();
        
        if (selectedRowIndex<0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update");
            return;
                
        }
        
       
        
        if (selectedRowIndex>=0) {
            
            CreatePerson selectedPerson=createPersonHistory.getHistory().get(selectedRowIndex);
            DefaultComboBoxModel model = new DefaultComboBoxModel();
            model.addElement("Boston");
            jCityCombo.setModel(model);
            jCityCombo.setSelectedItem(selectedPerson.getHousing().getCityname());

            DefaultComboBoxModel Communitymodel = new DefaultComboBoxModel();
            Communitymodel.addElement("Rural");
            Communitymodel.addElement("Urban");
            Communitymodel.addElement("Suburban");
            jCommunityCombo.setModel(Communitymodel);
            jCommunityCombo.setSelectedItem(selectedPerson.getHousing().getCommunityName());

            DefaultComboBoxModel Housingmodel = new DefaultComboBoxModel();
            if(jCommunityCombo.getSelectedItem().toString() == "Rural")
            { 
                Housingmodel.addElement("1011");
                Housingmodel.addElement("1012");
                Housingmodel.addElement("1013"); 
            }
            else if("Urban".equals(jCommunityCombo.getSelectedItem().toString()))
            {
                Housingmodel.addElement("2011");
                Housingmodel.addElement("2012");
                Housingmodel.addElement("2013"); 
            }
            else if(jCommunityCombo.getSelectedItem().toString() == "Suburban")
            {
                Housingmodel.addElement("3011");
                Housingmodel.addElement("3012");
                Housingmodel.addElement("3013"); 
            }
            jHousingCombo.setModel(Housingmodel);
            jHousingCombo.setSelectedItem(String.valueOf(selectedPerson.getHousing().getHouseNo()));

            selectedPerson.setFName(FieldFName.getText());
            selectedPerson.setLName(FieldLName.getText());
            selectedPerson.setEmail(FieldLName.getText());
            selectedPerson.setAge(Integer.parseInt(FieldAge.getText()));
            selectedPerson.setGender(FieldGender.getText());
            selectedPerson.setUniqueId(Integer.parseInt(FieldUniqueID.getText()));
            Housing house = new Housing();
            house.setCityname(jCityCombo.getSelectedItem().toString());
            house.setCommunityName(jCommunityCombo.getSelectedItem().toString());
            selectedPerson.setZipCode(Integer.parseInt(FieldZipCode.getText()));
            house.setHouseNo(Integer.parseInt(jHousingCombo.getSelectedItem().toString()));
            selectedPerson.setRole(FieldRole.getText());
            selectedPerson.setPassword(FieldPassword.getText());
            displayPersonTableInformation();

        }
        
            JOptionPane.showMessageDialog(this, "Person Information Updated");

        FieldFName.setText("");
        FieldLName.setText("");
        FieldEmail.setText("");
        FieldAge.setText("");
        FieldGender.setText("");
        FieldUniqueID.setText("");
        jHousingCombo.setSelectedItem(null);
        jCityCombo.setSelectedItem(null);
        jCommunityCombo.setSelectedItem(null);
        FieldRole.setText("");
        FieldPassword.setText("");
        FieldZipCode.setText(""); 


        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = PersonTable.getSelectedRow();
        if(selectedRowIndex >= 0)
        {
            CreatePerson selectedPerson=createPersonHistory.getHistory().get(selectedRowIndex);
            DefaultComboBoxModel model = new DefaultComboBoxModel();
            model.addElement("Boston");
            jCityCombo.setModel(model);
            jCityCombo.setSelectedItem(selectedPerson.getHousing().getCityname());

            DefaultComboBoxModel Communitymodel = new DefaultComboBoxModel();
            Communitymodel.addElement("Rural");
            Communitymodel.addElement("Urban");
            Communitymodel.addElement("Suburban");
            jCommunityCombo.setModel(Communitymodel);
            jCommunityCombo.setSelectedItem(selectedPerson.getHousing().getCommunityName());

            DefaultComboBoxModel Housingmodel = new DefaultComboBoxModel();
            if(jCommunityCombo.getSelectedItem().toString() == "Rural")
            { 
                Housingmodel.addElement("1011");
                Housingmodel.addElement("1012");
                Housingmodel.addElement("1013"); 
            }
            else if(jCommunityCombo.getSelectedItem().toString() == "Urban")
            {
                Housingmodel.addElement("2011");
                Housingmodel.addElement("2012");
                Housingmodel.addElement("2013"); 
            }
            else if(jCommunityCombo.getSelectedItem().toString() == "Suburban")
            {
                Housingmodel.addElement("3011");
                Housingmodel.addElement("3012");
                Housingmodel.addElement("3013"); 
            }
            jHousingCombo.setModel(Housingmodel);
            jHousingCombo.setSelectedItem(String.valueOf(selectedPerson.getHousing().getHouseNo()));
            
            
            FieldFName.setText(String.valueOf(selectedPerson.getFName()));
            FieldLName.setText(String.valueOf(selectedPerson.getLName()));
            FieldEmail.setText(selectedPerson.getEmail());
            FieldAge.setText(String.valueOf(selectedPerson.getAge()));
            FieldGender.setText(selectedPerson.getGender());
            FieldUniqueID.setText(String.valueOf(selectedPerson.getUniqueId()));
            FieldZipCode.setText(String.valueOf(selectedPerson.getZipCode())); 
            FieldRole.setText(selectedPerson.getRole());
            FieldPassword.setText(selectedPerson.getPassword());
            
            }
        else
        {
            JOptionPane.showMessageDialog(this, "Please select one Person Information to view all details");
        }


        
        

    }//GEN-LAST:event_btnViewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = PersonTable.getSelectedRow();
        if(selectedRowIndex >= 0)
        {
            CreatePerson selectedPerson=createPersonHistory.getHistory().get(selectedRowIndex);
        
            createPersonHistory.deleteRecords(selectedRowIndex);
            displayPersonTableInformation();
            
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please select one Person to Delete all details");
        }

        
        
   
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        // TODO add your handling code here:
       

    }//GEN-LAST:event_btnCheckActionPerformed

    private void FieldEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FieldEmailKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_FieldEmailKeyReleased

    private void FieldRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldRoleActionPerformed

    private void jCityComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCityComboActionPerformed
        // TODO add your handling code here:
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.addElement("Rural");
        model.addElement("Urban");
        model.addElement("Suburban");
        jCommunityCombo.setModel(model);
    }//GEN-LAST:event_jCityComboActionPerformed

    private void jCommunityComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCommunityComboActionPerformed
        // TODO add your handling code here:
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        if(jCommunityCombo.getSelectedItem() != null)
        {
            if(jCommunityCombo.getSelectedItem().toString() == "Rural")
            {
                model.addElement("1011");
                model.addElement("1012");
                model.addElement("1013");
            }
            else if(jCommunityCombo.getSelectedItem().toString() == "Urban")
            {
                model.addElement("2011");
                model.addElement("2012");
                model.addElement("2013");
            }
            else if(jCommunityCombo.getSelectedItem().toString() == "Suburban")
            {
                model.addElement("301");
                model.addElement("302");
                model.addElement("303");
            }
            jHousingCombo.setModel(model);
        }
    }//GEN-LAST:event_jCommunityComboActionPerformed

private void displayPersonTableInformation() {
        //btnSave.setVisible(false);
        DefaultTableModel model=(DefaultTableModel) PersonTable.getModel();
        model.setRowCount(0);
        for(CreatePerson e : createPersonHistory.getHistory()){
            Object[] row =new Object[12];
            row[0]=e;
            row[1]=e.getFName() ;
            row[2]=e.getLName();
            row[3]= e.getAge(); 
            row[4]=e.getEmail(); 
            row[5]=e.getUniqueId();
            row[6]=e.getPassword();
            row[7]=e.getGender() ;
            row[8]=e.getHousing().getCityname();
            row[9]= e.getHousing().getCommunityName(); 
            row[10]=e.getHousing().getHouseNo(); 
            row[11]=e.getZipCode();
            
            model.addRow(row);
        }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FieldAge;
    private javax.swing.JTextField FieldEmail;
    private javax.swing.JTextField FieldFName;
    private javax.swing.JTextField FieldGender;
    private javax.swing.JTextField FieldLName;
    private javax.swing.JTextField FieldPassword;
    private javax.swing.JTextField FieldRole;
    private javax.swing.JTextField FieldUniqueID;
    private javax.swing.JTextField FieldZipCode;
    private javax.swing.JTable PersonTable;
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> jCityCombo;
    private javax.swing.JComboBox<String> jCommunityCombo;
    private javax.swing.JComboBox<String> jHousingCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCity1;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblFirstName1;
    private javax.swing.JLabel lblHouseNo;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblPersonId;
    private javax.swing.JLabel lblZipCode;
    private javax.swing.JTextField txtBP;
    // End of variables declaration//GEN-END:variables
}
